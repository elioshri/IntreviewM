/**********************************************************************
* ЁЯУМ 06 тАУ SQL SERVER INTERVIEW Q&A (Data Analyst)
* ╫й╫Р╫Ь╫Х╫к ╫а╫д╫Х╫ж╫Х╫к ╫Ь╫и╫Р╫Щ╫Х╫а╫Х╫к ╫У╫Р╫Ш╫Ф ╫Р╫а╫Ь╫Щ╫б╫Ш + ╫д╫к╫и╫Х╫а╫Х╫к ╫Ю╫Ь╫Р╫Щ╫Э + ╫Ф╫б╫С╫и╫Щ╫Э ╫С╫в╫С╫и╫Щ╫к
*
* ╫Ф╫б╫Ы╫Ю╫Ф ╫Ь╫У╫Х╫Т╫Ю╫Ф:
*   dbo.Customers(CustomerID, CustomerName, City, SignupDate)
*   dbo.Orders(OrderID, CustomerID, OrderDate, Amount)
*   dbo.OrderItems(OrderItemID, OrderID, ProductID, Qty, UnitPrice)
*   dbo.Products(ProductID, ProductName, Category)
**********************************************************************/

----------------------------------------------------------------------
-- ЁЯзк Q1: ╫Ю╫ж╫Р ╫Р╫к ╫б╫Ъ ╫Ы╫Ь ╫Ф╫Ю╫Ы╫Щ╫и╫Х╫к (Amount) ╫С╫Ы╫Ь ╫в╫Х╫а╫Ф/╫й╫а╫Ф
----------------------------------------------------------------------

SELECT YEAR(OrderDate) AS year,
       SUM(Amount)     AS total_sales
FROM dbo.Orders
GROUP BY YEAR(OrderDate)
ORDER BY year;

-- ╫Ф╫б╫С╫и: ╫й╫Щ╫Ю╫Х╫й ╫С-YEAR ╫Ь╫з╫Ш╫Т╫Х╫и╫Щ╫Ф, SUM ╫Ь╫Р╫Т╫и╫Т╫ж╫Щ╫Ф. ╫Ш╫Щ╫д╫Щ ╫з╫и╫Щ╫Р╫Ф ╫а╫д╫Х╫ж╫Щ╫Э ╫Ь╫и╫Р╫Щ╫Х╫Я.


----------------------------------------------------------------------
-- ЁЯзк Q2: ╫Ь╫з╫Х╫Ч╫Х╫к ╫в╫Э ╫Щ╫Х╫к╫и ╫Ю-5 ╫Ф╫Ц╫Ю╫а╫Х╫к
----------------------------------------------------------------------

SELECT c.CustomerID, c.CustomerName,
       COUNT(o.OrderID) AS order_count
FROM dbo.Customers c
JOIN dbo.Orders o ON o.CustomerID = c.CustomerID
GROUP BY c.CustomerID, c.CustomerName
HAVING COUNT(o.OrderID) > 5
ORDER BY order_count DESC;

-- ╫Ф╫б╫С╫и: HAVING ╫Ю╫б╫а╫Я ╫Р╫Ч╫и╫Щ GROUP BY (WHERE ╫Ь╫Р ╫в╫Х╫С╫У ╫в╫Ь COUNT).


----------------------------------------------------------------------
-- ЁЯзк Q3: ╫Ф╫Ф╫Ц╫Ю╫а╫Ф ╫Ф╫Щ╫з╫и╫Ф ╫С╫Щ╫Х╫к╫и ╫Ь╫Ы╫Ь ╫Ь╫з╫Х╫Ч
----------------------------------------------------------------------

WITH ranked AS (
  SELECT o.CustomerID, o.OrderID, o.Amount,
         ROW_NUMBER() OVER (PARTITION BY o.CustomerID ORDER BY o.Amount DESC) AS rn
  FROM dbo.Orders o
)
SELECT CustomerID, OrderID, Amount
FROM ranked
WHERE rn = 1;

-- ╫Ф╫б╫С╫и: ROW_NUMBER ╫С╫к╫Х╫Ъ ╫Ч╫Ь╫Х╫Я ╫Ю╫Ч╫Ц╫Щ╫и ╫Р╫к ╫Ф-"╫Ю╫б╫д╫и ╫б╫Щ╫У╫Х╫и╫Щ" ╫Ь╫Ы╫Ь ╫й╫Х╫и╫Ф ╫С╫з╫С╫Х╫ж╫Ф.
-- rn=1 = ╫Ф╫Ф╫Ц╫Ю╫а╫Ф ╫Ф╫Щ╫з╫и╫Ф ╫С╫Щ╫Х╫к╫и ╫Ь╫Ы╫Ь ╫Ь╫з╫Х╫Ч.


----------------------------------------------------------------------
-- ЁЯзк Q4: ╫Ю╫Ю╫Х╫ж╫в ╫б╫Ы╫Х╫Э ╫Ф╫Ф╫Ц╫Ю╫а╫Х╫к ╫Ь╫Ь╫з╫Х╫Ч
----------------------------------------------------------------------

SELECT c.CustomerID, c.CustomerName,
       AVG(o.Amount) AS avg_amount
FROM dbo.Customers c
JOIN dbo.Orders o ON o.CustomerID = c.CustomerID
GROUP BY c.CustomerID, c.CustomerName
ORDER BY avg_amount DESC;

-- ╫Ф╫б╫С╫и: AVG ╫Ю╫Ч╫Х╫й╫С ╫Р╫Ч╫и╫Щ Group By. ╫й╫Р╫Ь╫Ф ╫а╫д╫Х╫ж╫Ф ╫Ю╫Р╫Х╫У.


----------------------------------------------------------------------
-- ЁЯзк Q5: ╫Ь╫з╫Х╫Ч╫Х╫к ╫й╫Ь╫Р ╫С╫Щ╫ж╫в╫Х ╫Р╫г ╫Ф╫Ц╫Ю╫а╫Ф
----------------------------------------------------------------------

SELECT c.CustomerID, c.CustomerName
FROM dbo.Customers c
LEFT JOIN dbo.Orders o ON o.CustomerID = c.CustomerID
WHERE o.OrderID IS NULL;

-- ╫Ф╫б╫С╫и: Anti-Join ╫в╫Э LEFT JOIN + ╫С╫У╫Щ╫з╫к NULL.


----------------------------------------------------------------------
-- ЁЯзк Q6: ╫Ю╫Х╫ж╫и╫Щ╫Э ╫Ф╫Ы╫Щ ╫а╫Ю╫Ы╫и╫Щ╫Э (Top 3 ╫Ь╫д╫Щ ╫Ы╫Ю╫Х╫к)
----------------------------------------------------------------------

SELECT TOP (3) p.ProductName,
       SUM(oi.Qty) AS total_qty
FROM dbo.OrderItems oi
JOIN dbo.Products p ON p.ProductID = oi.ProductID
GROUP BY p.ProductName
ORDER BY total_qty DESC;

-- ╫Ф╫б╫С╫и: ╫б╫Ы╫Щ╫Ю╫к Quantities + TOP (3) ╫в╫Ь ╫д╫Щ ORDER BY.


----------------------------------------------------------------------
-- ЁЯзк Q7: ╫Ы╫Ю╫Ф ╫Ь╫з╫Х╫Ч╫Х╫к ╫Щ╫Щ╫Ч╫Х╫У╫Щ╫Щ╫Э ╫з╫а╫Х ╫С╫Ы╫Ь ╫й╫а╫Ф
----------------------------------------------------------------------

SELECT YEAR(o.OrderDate) AS year,
       COUNT(DISTINCT o.CustomerID) AS unique_customers
FROM dbo.Orders o
GROUP BY YEAR(o.OrderDate)
ORDER BY year;

-- ╫Ф╫б╫С╫и: COUNT(DISTINCT ...) = ╫б╫д╫Щ╫и╫к ╫Щ╫Щ╫Ч╫Х╫У╫Щ╫Щ╫Э (╫й╫Р╫Ь╫Ф ╫з╫Ь╫Р╫б╫Щ╫к).


----------------------------------------------------------------------
-- ЁЯзк Q8: ╫Р╫Ч╫Х╫Ц ╫Ф╫Ц╫Ю╫а╫Х╫к ╫Ю╫в╫Ь ╫Ф╫Ю╫Ю╫Х╫ж╫в
----------------------------------------------------------------------

WITH stats AS (
  SELECT AVG(Amount) AS avg_amount FROM dbo.Orders
)
SELECT
  100.0 * SUM(CASE WHEN o.Amount > s.avg_amount THEN 1 ELSE 0 END) / COUNT(*) AS pct_above_avg
FROM dbo.Orders o CROSS JOIN stats s;

-- ╫Ф╫б╫С╫и: ╫Ю╫Ч╫й╫С╫Щ╫Э ╫Ю╫Ю╫Х╫ж╫в ╫д╫в╫Э ╫Р╫Ч╫к (CTE/╫б╫Р╫С-╫з╫Х╫Х╫Щ╫и), ╫Х╫Р╫Ц ╫Ю╫й╫Х╫Х╫Щ╫Э ╫Ы╫Ь ╫Ф╫Ц╫Ю╫а╫Ф ╫Р╫Ь╫Щ╫Х.


----------------------------------------------------------------------
-- ЁЯзк Q9: ╫Ф╫Ц╫Ю╫а╫Ф ╫Р╫Ч╫и╫Х╫а╫Ф ╫Ь╫Ы╫Ь ╫Ь╫з╫Х╫Ч
----------------------------------------------------------------------

WITH ranked AS (
  SELECT o.CustomerID, o.OrderID, o.OrderDate,
         ROW_NUMBER() OVER (PARTITION BY o.CustomerID ORDER BY o.OrderDate DESC) AS rn
  FROM dbo.Orders o
)
SELECT CustomerID, OrderID, OrderDate
FROM ranked
WHERE rn = 1;

-- ╫Ф╫б╫С╫и: ╫У╫д╫Х╫б ╫а╫д╫Х╫е ╫Ю╫Р╫Х╫У тЖТ ╫Ь╫Ю╫ж╫Х╫Р ╫и╫й╫Х╫Ю╫Ф ╫Р╫Ч╫и╫Х╫а╫Ф ╫С╫з╫С╫Х╫ж╫Ф.


----------------------------------------------------------------------
-- ЁЯзк Q10: ╫Ф╫Ы╫а╫б╫Ф ╫Ч╫Х╫У╫й╫Щ╫к (╫б╫Ы╫Х╫Э Amount ╫Ь╫д╫Щ ╫Ч╫Х╫У╫й)
----------------------------------------------------------------------

SELECT FORMAT(OrderDate,'yyyy-MM') AS ym,
       SUM(Amount) AS total_sales
FROM dbo.Orders
GROUP BY FORMAT(OrderDate,'yyyy-MM')
ORDER BY ym;

-- ╫Ф╫б╫С╫и: FORMAT ╫а╫Х╫к╫Я yyyy-MM ╫Ю╫Х╫Ы╫Я. ╫Ш╫Щ╫д╫Х╫б╫Щ ╫Ь╫й╫Р╫Ь╫Х╫к BI / ╫Р╫а╫Ь╫Щ╫б╫Ш.


----------------------------------------------------------------------
-- ЁЯзк Q11: ╫Ю╫ж╫Р ╫Р╫к ╫Ф╫д╫в╫и ╫Ф╫Ы╫Щ ╫Т╫У╫Х╫Ь ╫С╫Щ╫Я ╫й╫к╫Щ ╫Ф╫Ц╫Ю╫а╫Х╫к ╫в╫Х╫з╫С╫Х╫к ╫Ь╫Ь╫з╫Х╫Ч
----------------------------------------------------------------------

WITH diffs AS (
  SELECT CustomerID, OrderDate,
         LAG(OrderDate) OVER (PARTITION BY CustomerID ORDER BY OrderDate) AS prev_date
  FROM dbo.Orders
)
SELECT CustomerID,
       MAX(DATEDIFF(DAY, prev_date, OrderDate)) AS max_gap_days
FROM diffs
WHERE prev_date IS NOT NULL
GROUP BY CustomerID
ORDER BY max_gap_days DESC;

-- ╫Ф╫б╫С╫и: ╫й╫Щ╫Ю╫Х╫й ╫С-LAG ╫Ы╫У╫Щ ╫Ь╫и╫Р╫Х╫к ╫Р╫к ╫Ф╫Ф╫Ц╫Ю╫а╫Ф ╫Ф╫з╫Х╫У╫Ю╫к, ╫Х╫Р╫Ц ╫Ч╫Щ╫й╫Х╫С DATEDIFF.


----------------------------------------------------------------------
-- ЁЯзк Q12: ╫Р╫Ч╫Х╫Ц ╫Ю╫Ы╫Щ╫и╫Х╫к ╫Ь╫Ы╫Ь ╫з╫Ш╫Т╫Х╫и╫Щ╫Ф ╫Ю╫к╫Х╫Ъ ╫Ы╫Ь╫Ь ╫Ф╫Ю╫Ы╫Щ╫и╫Х╫к
----------------------------------------------------------------------

WITH cat AS (
  SELECT p.Category,
         SUM(oi.Qty * oi.UnitPrice) AS sales
  FROM dbo.OrderItems oi
  JOIN dbo.Products p ON p.ProductID = oi.ProductID
  GROUP BY p.Category
),
tot AS (
  SELECT SUM(sales) AS total_sales FROM cat
)
SELECT c.Category, c.sales,
       CAST(100.0*c.sales/t.total_sales AS DECIMAL(6,2)) AS pct
FROM cat c CROSS JOIN tot t
ORDER BY pct DESC;

-- ╫Ф╫б╫С╫и: ╫Ч╫Щ╫й╫Х╫С ╫б╫Ы╫Х╫Э ╫Ь╫д╫Щ ╫з╫Ш╫Т╫Х╫и╫Щ╫Ф + ╫б╫Ъ ╫Ф╫Ы╫Ь + ╫Р╫Ч╫Х╫Ц╫Щ╫Э.


----------------------------------------------------------------------
-- ЁЯзк Q13: ╫Ю╫Ю╫Х╫ж╫в ╫а╫в ╫Ь-7 ╫Щ╫Ю╫Щ╫Э ╫й╫Ь ╫Ю╫Ы╫Щ╫и╫Х╫к ╫Щ╫Х╫Ю╫Щ╫Х╫к
----------------------------------------------------------------------

WITH daily AS (
  SELECT CAST(OrderDate AS DATE) AS d, SUM(Amount) AS daily_sales
  FROM dbo.Orders
  GROUP BY CAST(OrderDate AS DATE)
)
SELECT d, daily_sales,
       AVG(daily_sales) OVER (ORDER BY d ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS avg7
FROM daily
ORDER BY d;

-- ╫Ф╫б╫С╫и: ╫й╫Щ╫Ю╫Х╫й ╫С╫Ч╫Ь╫Х╫Я ROWS ╫Ь-7 ╫Щ╫Ю╫Щ╫Э. ╫к╫и╫Т╫Щ╫Ь ╫Р╫а╫Ь╫Щ╫б╫Ш╫Щ ╫з╫Ь╫Р╫б╫Щ.


----------------------------------------------------------------------
-- ЁЯзк Q14: ╫Ю╫ж╫Щ╫Р╫к ╫Ф╫Ь╫з╫Х╫Ч╫Х╫к ╫в╫Э ╫Ф╫Ф╫Ы╫а╫б╫Ф ╫Ф╫Т╫С╫Х╫Ф╫Ф ╫С╫Щ╫Х╫к╫и ╫Ь╫в╫Х╫Ю╫к ╫Ф╫Ю╫Ю╫Х╫ж╫в ╫Ф╫Ы╫Ь╫Ь╫Щ
----------------------------------------------------------------------

WITH totals AS (
  SELECT CustomerID, SUM(Amount) AS total_amt
  FROM dbo.Orders
  GROUP BY CustomerID
),
avg_all AS (
  SELECT AVG(total_amt) AS avg_amt FROM totals
)
SELECT t.CustomerID, t.total_amt
FROM totals t CROSS JOIN avg_all a
WHERE t.total_amt > a.avg_amt
ORDER BY t.total_amt DESC;

-- ╫Ф╫б╫С╫и: ╫Ч╫Щ╫й╫Х╫С ╫б╫Ъ ╫Ь╫Ы╫Ь ╫Ь╫з╫Х╫Ч, ╫Ч╫Щ╫й╫Х╫С ╫Ю╫Ю╫Х╫ж╫в ╫Ы╫Ь╫Ь╫Щ, ╫Х╫Р╫Ц ╫б╫Щ╫а╫Х╫Я ╫Ю╫Щ ╫Ю╫в╫Ь╫Щ╫Х.


----------------------------------------------------------------------
-- ЁЯзк Q15: ╫Ч╫Щ╫й╫Х╫С ARPU (Average Revenue Per User) ╫й╫а╫к╫Щ
----------------------------------------------------------------------

SELECT YEAR(OrderDate) AS year,
       SUM(Amount)*1.0 / COUNT(DISTINCT CustomerID) AS arpu
FROM dbo.Orders
GROUP BY YEAR(OrderDate)
ORDER BY year;

-- ╫Ф╫б╫С╫и: ARPU = ╫Ф╫Ы╫а╫б╫Х╫к / ╫Ю╫й╫к╫Ю╫й╫Щ╫Э ╫Щ╫Щ╫Ч╫Х╫У╫Щ╫Щ╫Э ╫С╫к╫з╫Х╫д╫Ф. ╫й╫Р╫Ь╫Ф ╫д╫Х╫д╫Х╫Ь╫и╫Щ╫к ╫С╫Р╫а╫Ь╫Щ╫Ш╫Щ╫з╫Ф.
