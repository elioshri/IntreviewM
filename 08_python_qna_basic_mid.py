######################################################################
# 📌 08 – Python Q&A: Beginner → Intermediate (Data Analyst)
#
# דוגמאות לשאלות קלאסיות + פתרונות והסברים בעברית
# הנושאים: לולאות, תנאים, רשימות, מילונים, פונקציות, מחרוזות,
#           pandas בסיסי, NumPy בסיסי
######################################################################

import numpy as np
import pandas as pd

# ==============================================================
# 🧪 Q1: הפוך מחרוזת
# ==============================================================

s = "Data Analyst"
ans = s[::-1]
print("Q1:", ans)
# הסבר: slicing עם צעד -1 הופך את המחרוזת.

# ==============================================================
# 🧪 Q2: ספירת הופעות של תווים
# ==============================================================

from collections import Counter
text = "banana"
cnt = Counter(text)
print("Q2:", cnt)
# {'b':1, 'a':3, 'n':2}

# ==============================================================
# 🧪 Q3: רשימת ריבועים מ-1 עד 10
# ==============================================================

squares = [n**2 for n in range(1,11)]
print("Q3:", squares)

# ==============================================================
# 🧪 Q4: הדפס רק זוגיים מתוך רשימה
# ==============================================================

nums = [1,2,3,4,5,6]
evens = [n for n in nums if n%2==0]
print("Q4:", evens)

# ==============================================================
# 🧪 Q5: החלפת מפתח/ערך במילון
# ==============================================================

d = {"a":1,"b":2,"c":3}
swapped = {v:k for k,v in d.items()}
print("Q5:", swapped)

# ==============================================================
# 🧪 Q6: פונקציה שמחזירה ממוצע רשימה
# ==============================================================

def avg(lst):
    return sum(lst)/len(lst) if lst else None

print("Q6:", avg([1,2,3,4,5]))

# ==============================================================
# 🧪 Q7: כמה מילים יש במשפט
# ==============================================================

sentence = "Data Analyst role in sports prediction"
word_count = len(sentence.split())
print("Q7:", word_count)

# ==============================================================
# 🧪 Q8: שימוש ב-any/all
# ==============================================================

lst = [0,0,1,0]
print("Q8 any:", any(lst))  # True (כי יש 1)
print("Q8 all:", all(lst))  # False (כי יש אפסים)

# ==============================================================
# 🧪 Q9: NumPy – מצא ממוצע, מקסימום ומיקום המקסימום
# ==============================================================

arr = np.array([5,8,2,9,3])
print("Q9 mean:", arr.mean(), "max:", arr.max(), "argmax:", arr.argmax())

# ==============================================================
# 🧪 Q10: NumPy – סנן ערכים מעל 5
# ==============================================================

print("Q10:", arr[arr > 5])   # [8,9]

# ==============================================================
# 🧪 Q11: pandas – DataFrame קטן וסינון
# ==============================================================

df = pd.DataFrame({
    "name":["Dana","Avi","Chen","Lior"],
    "score":[90,80,95,70]
})
print("\nQ11 DataFrame:\n", df)

# סינון תלמידים עם ציון >=85
print("Q11 filtered:\n", df[df["score"]>=85])

# ==============================================================
# 🧪 Q12: pandas – חישוב ממוצע ציון
# ==============================================================

print("Q12 avg score:", df["score"].mean())

# ==============================================================
# 🧪 Q13: pandas – הוספת עמודה עם דירוג (rank)
# ==============================================================

df["rank"] = df["score"].rank(ascending=False, method="dense").astype(int)
print("Q13:\n", df)

# ==============================================================
# 🧪 Q14: pandas – GroupBy סכום מכירות ללקוח
# ==============================================================

orders = pd.DataFrame({
    "cust":[1,1,2,2,3],
    "amount":[100,150,200,80,120]
})
print("\nQ14 orders:\n", orders)

print("Q14 groupby sum:\n",
      orders.groupby("cust")["amount"].sum().reset_index())

# ==============================================================
# 🧪 Q15: pandas – מציאת ממוצע נע (rolling)
# ==============================================================

sales = pd.Series([100,120,80,200,150], name="sales")
print("\nQ15 rolling mean:\n", sales.rolling(3, min_periods=1).mean())

######################################################################
# 💡 טיפים:
# • פתח בעיות עם כלים פשוטים: list comprehension, dict comprehension.
# • כלים מובנים (min/max/sum/sorted/len) – עונים על 70% מהשאלות.
# • pandas: תמיד תבדוק .head() ו-.dtypes.
# • NumPy: מסכות (arr[cond]) זה טריק חזק מאוד.
######################################################################
