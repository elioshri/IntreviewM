######################################################################
# 📌 07 – Python Tips & Tricks (Data Analyst)
#
# אוסף טיפים חשובים לפתרון מהיר, נקי ואפקטיבי של שאלות ראיון
# (לא ספציפי ל-pandas או NumPy אלא כלים כלליים של פייתון).
######################################################################

# ---------------------------------------------------------------
# 1) שימוש ב-list/dict comprehensions
# ---------------------------------------------------------------

nums = [1,2,3,4,5]
squares = [n**2 for n in nums]               # [1,4,9,16,25]
even_squares = [n**2 for n in nums if n%2==0]

# dict comprehension – שימושי ליצירת map מהיר
names = ["Dana","Avi","Chen"]
length_map = {n: len(n) for n in names}      # {'Dana':4,'Avi':3,'Chen':4}

# ---------------------------------------------------------------
# 2) enumerate / zip – לולאות נקיות
# ---------------------------------------------------------------

# enumerate נותן גם אינדקס
for i, val in enumerate(["a","b","c"], start=1):
    print(i, val)

# zip מחבר שתי רשימות
for name, score in zip(names, [90,80,95]):
    print(name, score)

# ---------------------------------------------------------------
# 3) unpacking – פיצול מהיר
# ---------------------------------------------------------------

a, b, *rest = [10,20,30,40,50]
# a=10, b=20, rest=[30,40,50]

# ---------------------------------------------------------------
# 4) שימוש ב-any / all
# ---------------------------------------------------------------

nums = [1,2,3,0]
print(any(nums))   # True אם יש ערך לא אפס
print(all(nums))   # False כי יש 0

# ---------------------------------------------------------------
# 5) מיון מהיר עם key
# ---------------------------------------------------------------

scores = [("Dana",90),("Avi",80),("Chen",95)]
sorted_scores = sorted(scores, key=lambda x: x[1], reverse=True)
# [('Chen',95),('Dana',90),('Avi',80)]

# ---------------------------------------------------------------
# 6) Counter / defaultdict
# ---------------------------------------------------------------

from collections import Counter, defaultdict
cnt = Counter(["a","b","a","c","b","a"])
print(cnt.most_common(1))     # [('a',3)]

dd = defaultdict(int)
for c in ["x","y","x"]:
    dd[c]+=1
print(dict(dd))               # {'x':2,'y':1}

# ---------------------------------------------------------------
# 7) טיפול ב-None עם or ו- get
# ---------------------------------------------------------------

val = None
print(val or "default")   # "default"

d = {"a":1}
print(d.get("b",0))       # 0 במקום KeyError

# ---------------------------------------------------------------
# 8) עבודה עם מחרוזות
# ---------------------------------------------------------------

text = "Data Analyst"
print(text.lower(), text.upper())
print(text.split())       # ['Data','Analyst']
print("-".join(["2025","07","02"]))  # "2025-07-02"

# f-string – דרך מהירה לניסוח
name, score = "Dana", 95
print(f"{name} קיבלה {score} נקודות")

# ---------------------------------------------------------------
# 9) lambda + map/filter
# ---------------------------------------------------------------

nums = [1,2,3,4,5]
doubled = list(map(lambda x: x*2, nums))        # [2,4,6,8,10]
evens = list(filter(lambda x: x%2==0, nums))   # [2,4]

# ---------------------------------------------------------------
# 10) try/except קצר
# ---------------------------------------------------------------

try:
    x = int("100")
except ValueError:
    x = None

# ---------------------------------------------------------------
# 11) שימוש ב-set להסרת כפילויות ובדיקת חברות
# ---------------------------------------------------------------

vals = [1,2,2,3,3,3]
print(set(vals))         # {1,2,3}
print(2 in vals)         # True (חיפוש מהיר)

# ---------------------------------------------------------------
# 12) מיון / חיתוך רשימות
# ---------------------------------------------------------------

nums = [5,2,8,1,9]
print(sorted(nums))       # [1,2,5,8,9]
print(nums[:3])           # שלושת הראשונים
print(nums[-2:])          # שני האחרונים

# ---------------------------------------------------------------
# 13) פונקציות עם *args ו-**kwargs
# ---------------------------------------------------------------

def mysum(*args):
    return sum(args)

print(mysum(1,2,3,4))     # 10

def show(**kwargs):
    for k,v in kwargs.items():
        print(k,v)

show(name="Eli", age=30)

# ---------------------------------------------------------------
# 14) שימוש ב-itertools (דברים שימושיים)
# ---------------------------------------------------------------

import itertools as it
nums = [1,2,3]
print(list(it.accumulate(nums)))   # [1,3,6] סכום מצטבר
print(list(it.product([1,2],["A","B"]))) # [(1,'A'),(1,'B'),(2,'A'),(2,'B')]

# ---------------------------------------------------------------
# 15) טיפים לראיונות
# ---------------------------------------------------------------
"""
• תמיד תעדיף list/dict comprehensions – הם קצרים וקריאים.
• enumerate ו-zip – יחסכו לך טעויות בלולאות.
• Counter – כלי סופר חשוב לספירה (מילים, תווים, קטגוריות).
• כלים מובנים: any/all/min/max/sorted/key – עונים על חצי מהשאלות.
• unpacking ו-*args/ **kwargs – פותרים בקלות קלטים משתנים.
• sets – יעילים לחיתוך/איחוד/הבדל בין קבוצות.
• תזכור f-string – זו הדרך הקצרה והקריאה ביותר להדפסה/פורמט.
• בפנדס תמיד תעדיף vectorization (לא apply מיותר).
"""
######################################################################
